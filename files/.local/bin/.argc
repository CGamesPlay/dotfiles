#!/usr/bin/env bash
# @describe Useful commands from my dotfiles.

set -eu

dotfiles_root() {
	path=${BASH_SOURCE[0]}
	realpath -m "$path"/../../../..
}

# @cmd Open an editor in the dotfiles directory
dotfiles() {
	cd "$(dotfiles_root)"
	if command -v neovide >/dev/null; then
		neovide
	else
		$EDITOR
	fi
}

# @cmd Create a temporary docker container.
# @arg       image=buildpack-deps:jammy  Base image to use
docker-sandbox() {
	container_id=$(docker run -d --rm "${argc_image:?}" sleep infinity)
	docker exec -i "$container_id" sh <<-END_SCRIPT
	apt-get update
	apt-get install -y sudo rsync
	cd ~
	git clone https://gitlab.com/CGamesPlay/dotfiles dotfiles
	cd dotfiles
	./bootstrap.sh
	END_SCRIPT
	status=0
	docker exec -it "$container_id" fish || status=$?
	docker rm -f "$container_id"
	exit "$status"
}

# @cmd Install amel
# @arg       target     Path to install to
# @meta require-tools python3.11 uv
install-amel() {
	target=${argc_target:-~/amel}
	if [ ! -d "$target" ]; then
		git clone git@gitlab.com:CGamesPlay/amel-pair.git "$target"
		cd "$target"
	else
		cd "$target"
		git pull
	fi
	uv sync
	ln -sf "$target/.venv/bin/amel" ~/.local/bin/amel
}

# @cmd Instantiate templates.
create() { :; }

# @cmd Copy the devcontainer workspace root template to the named directory.
# @arg       target!        Location of the new workspace.
# @option -n --name <NAME>  Human-readable name for the workspace.
create::devcontainer() {
	template_dir="$(dotfiles_root)/share/devcontainer"
	argc_name=${argc_name:-$argc_target}
	cp -R "$template_dir" "$argc_target"
	echo "$argc_target: created"
}

# @cmd Create a sample Argcfile.
# @arg       target=Argcfile.sh            Target filename.
create::argcfile() {
	template_file="$(dotfiles_root)/share/Argcfile-template.sh"
	cp -i "$template_file" "$argc_target"
	echo "$argc_target: created"
}

# @cmd Create a CACHEDIR.TAG file in the target directory.
# https://bford.info/cachedir/
# @arg       target=. <DIR>  Target directory.
create::cachedir-tag() {
	echo "Signature: 8a477f597d28d172789f06886806bc55" > "${argc_target:?}"/CACHEDIR.TAG
	echo "${argc_target}/CACHEDIR.TAG: created"
}

pwd() {
	command pwd
}

eval "$(argc --argc-eval "$0" "$@")"
