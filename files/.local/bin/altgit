#!/bin/bash
# Requires git >= 2.32.0
set -ueo pipefail

function help() {
    cat <<EOF
usage: altgit <command> [<args>]

Altgit allows you to keep a git repository strictly for the files that
are ignored in another git repository.

To start, initialize the .altgit directory:
  altgit init

Normal git commands will work normally:
  altgit add .envrc
  altgit commit -m "Check in .envrc"

There are two commands to help manage the ignored files. To see files that are ignored by git and not checked into altgit:
  altgit ls-files

And to delete them:
  altgit clean -nd
EOF
}

# Find the real git directory
export ALTGIT_PRIMARY="${ALTGIT_PRIMARY:=$(git rev-parse --path-format=absolute --git-dir)}"
altgitdir="$(dirname "$ALTGIT_PRIMARY")/.altgit"

# We need to override some built-in git commands, so we transparently rewrite
# these to alt- variants which are configured as aliases.
argv=("$@")
for (( i=0; i<$#; i++)); do
    case "${argv[i]}" in
        --help | help)
            help
            exit 0
            ;;
        -*)
            # Option, ignore and continue processing
            ;;
        init | add | clean | ls-files)
            # Overridden command
            argv[$i]="alt${argv[i]}"
            break
            ;;
        *)
            # Any other command, stop processing
            break
            ;;
    esac
done

# Execute git
unset GIT_INDEX_FILE GIT_OBJECT_DIRECTORY GIT_ALTERNATE_OBJECT_DIRECTORIES
export GIT_CONFIG_GLOBAL=${ALTGIT_CONFIG_GLOBAL:=~/.config/git/altconfig}
exec git --git-dir="$altgitdir" "${argv[@]}"
