#!/bin/bash
# Launch neovide using the iTerm2 extension script.

set -ue

if [ -d /Applications/Neovide.app ]; then
	# Running locally, run with a trampoline to support direnv
	if [[ "${1:-}" == "--help" ]]; then
		echo "neovide is a wrapper to integrate Neovide with iTerm2." 2>&1
		exec /Applications/Neovide.app/Contents/MacOS/neovide neovide --help
	fi

	if [[ "${NEOVIDE_LAUNCHER:+1}" ]]; then
		args=()
		for arg in "$@"; do
			case "$arg" in
				--prefix=*)
					prefix=${arg#--prefix=}
					;;
				*)
					args+=("$arg")
					;;
			esac
		done
		unset NEOVIDE_LAUNCHER
		exec sh -c "$prefix $(printf '%q ' "${args[@]}")"
	else
		NEOVIDE_LAUNCHER=1 open -na Neovide --args --neovim-bin="$0" -- --prefix="cd $(printf %q "$(pwd)") && exec direnv exec . nvim" "$@"
	fi

else
	# Running in a remote environment, open using iTerm2 custom escape sequence.
	if [[ "${1:-}" == "--help" ]]; then
		cat <<-EOF >&2
		neovide is a wrapper to integrate Neovide with iTerm2.

		Usage:
		  neovide [FILENAME]
		EOF
	fi

	value="id=neovide:env=${ATENV_NAME:?}:dir=$(pwd)"
	if [[ "${TMUX:+1}" ]]; then
		value="$value:tmux=$TMUX"
	fi
	if [[ "${1:+1}" ]]; then
		value="$value:filename=$1"
	fi

	printf "\033]1337;Custom=%s\a" "$value"
fi
