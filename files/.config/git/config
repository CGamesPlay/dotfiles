### Visitors!
### Please borrow freely from this config, but make sure to change
### the [user] section to your info

[user]
	name = Ryan Patterson
	email = cgamesplay@cgamesplay.com

# Use SSH keys for commit signing. Not enabled by default, but configured.
# To enable for a commit, use git commit -S.
# To enable for a repository, use git config commit.gpgsign true
[gpg]
	format = ssh
[gpg "ssh"]
	defaultKeyCommand = sh -c 'echo key::$(ssh-add -L)'

[core]
	whitespace = trailing-space,space-before-tab
	pager = delta
	askPass =

[interactive]
	diffFilter = delta --color-only

[pager]
	# Never paginate git branch output
	branch = cat
	# Allow long lines in git grep, but paginate if it goes over the screen height
	grep = less -+S -FRX

[delta]
	navigate = true
	navigate-regex = ^(commit|added:|removed:|renamed:|Î”)
	line-numbers = true
	light = true
	commit-decoration-style = bold yellow ul ol
	file-decoration-style = blue ul ol
	hunk-header-decoration-style = none
	pager = less -+F
	max-line-length = 0

[color "branch"]
	current = white blue bold
	local  = blue
	remote = green
[color "diff"]
	plain = reset
	meta = yellow
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
	commit = yellow bold
[color "status"]
	added = green
	updated = green
	changed = yellow
	untracked = black

[alias]
	# Most common aliases
	br = branch -vv --sort=-committerdate
	co = checkout
	amend = commit --amend
	ci = commit
	st = status
	cp = cherry-pick
	diff-sbs = -c delta.side-by-side=true diff
	# Show a commit graph
	graph = log --date-order --date=short --graph --full-history --pretty=format:'%x08%x09%C(red)%h %C(cyan)%cd %C(bold blue)%cN%C(reset)%C(bold yellow)%d %C(reset)%s'
	# Utilities for setting up branches with tracking
	start = checkout --track=direct -b
	track = branch --set-upstream-to
	# Safe remove all branches reachable from HEAD. "Garbage Collect BRanches"
	gcbr = !git branch --no-track --no-color --merged | sed 's/[ *]*//' | grep -v main | grep -v master | xargs -n1 git branch -d &> /dev/null || exit 0
	push-pull = !git pull --rebase && git push
	pull-all = "!current_branch=$(git branch --show-current) && git fetch --all && git for-each-ref 'refs/heads/*' --format '%(refname:strip=2)' | while read br; do git checkout $br && git rebase @{u} || git rebase --abort; done && git checkout $current_branch"
	# Rebase onto the same base commit. Allows editing a stack of commits
	# without changing the base. Especially useful when someone squashes your
	# commits as part of a merge.
	rebase-in-place = !git rebase --onto $(git merge-base HEAD @{u})
	unstage = restore --staged
	# Open the web repo associated with this repository.
	web = !sh -c \"git remote get-url \\${1:-origin} | sed -e 's\\$git@gitlab.com:\\$https://gitlab.com/\\$' -e 's\\$git@github.com:\\$https://github.com/\\$' | xargs \\$(which open || which xdg-open)\" git-web
	# Create a fixup commit using fzf
	fixup = !git commit --fixup $(git log --oneline | fzf --preview='git show {1} --stat --color=always' | awk '{ print $1 }')

[log]
	date = human-local
[format]
	# This is (almost) the same as medium (the default) but it uses commit
	# dates instead of author dates.
	pretty = tformat:"%C(yellow)commit %H%Creset%nCommitter: %cN <%cE>%nDate:      %cd%n%n%w(0,4,4)%C(bold)%s%Creset%n%n%-b%-n"
[blame]
	date = short
[diff]
	renames = copies
	mnemonicPrefix = true
	colorMoved = plain
	algorithm = histogram
	submodule = log
[apply]
	whitespace = strip
[merge]
	ff = false
	tool = emerge
[status]
	relativePaths = true
	submoduleSummary = true
[web]
	browser = lynx
[rebase]
	stat = true
	updateRefs = true
	missingCommitsCheck = error
	autoStash = true
	autoSquash = true
[rerere]
	enabled = true
[init]
	defaultBranch = main
[push]
	default = current
	recurseSubmodules = on-demand
	followTags = true
[branch]
	autoSetupRebase = always
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[pull]
	rebase = merges
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[diff-so-fancy]
	markEmptyLines = false
	stripLeadingSymbols = false
[fetch]
	prune = true
	pruneTags = true
	all = true
[credential]
	helper = store

# Always use SSH for Github, in place of HTTPS.
#[url "git@github.com:"]
#	insteadOf = https://github.com/

[include]
	path = ~/.config/git/config.local
[advice]
	skippedCherryPicks = false
[tag]
	sort = -version:refname
[help]
	autoCorrect = prompt
[commit]
	verbose = true
