---
  - hosts: '*'
    gather_facts: false
    become: yes
    tasks:
      - name: check for hbv-self-destruct.env
        stat: path=/etc/hbv-self-destruct.env
        register: self_destruct_env
      - name: fail if hbv-self-destruct.env is missing
        fail: msg="/etc/hbv-self-destruct.env is not configured"
        when: not self_destruct_env.stat.exists

      - name: install self-destruct service
        copy:
          dest: /etc/systemd/system/hbv-self-destruct.service
          content: |
            # When this service *stops*, it tells hcloud to delete this machine.
            [Unit]
            Description=self destruct on poweroff

            # We want to stop this service pretty late in the shutdown process,
            # but before the network goes down. By setting
            # Before=network.target, our self destruct will only happen after
            # everything which is After=network.target.
            Before=network.target user.slice machine.slice
            # But the self destruct requires the network to actually be active.
            After=systemd-networkd.service nss-lookup.target

            [Service]
            EnvironmentFile=-/etc/hbv-self-destruct.env
            ExecStop=/usr/local/sbin/hbv-self-destruct
            Type=oneshot
            RemainAfterExit=yes

            [Install]
            WantedBy=multi-user.target
      - copy:
          src: scripts/hbv-self-destruct
          dest: /usr/local/sbin/hbv-self-destruct
          mode: 0755
      - systemd:
          daemon_reload: yes
          name: hbv-self-destruct
          enabled: true
          state: started

      - name: install ansible systemd service
        copy:
          dest: /etc/systemd/system/ansible.service
          content: |
            [Unit]
            Description="Ansible - run ansible-pull on boot"
            Documentation=https://www.ansible.com/
            DefaultDependencies=no
            Wants=cloud-final.target systemd-networkd-wait-online.service
            After=cloud-final.target systemd-networkd-wait-online.service

            [Service]
            Type=oneshot
            ExecStart=/opt/ansible/.venv/bin/ansible-pull -U https://gitlab.com/CGamesPlay/dotfiles -d /opt/ansible/dotfiles -i localhost, devserver/ansible-site.yml

            [Install]
            WantedBy=cloud-init.target
      - systemd:
          daemon_reload: yes
          name: ansible
          enabled: true

      - name: install auto-shutdown service
        copy:
          src: scripts/hbv-auto-shutdown
          dest: /usr/local/bin/hbv-auto-shutdown
          mode: 0755
        register: auto_shutdown_bin
      - copy:
          dest: /etc/systemd/system/hbv-auto-shutdown.service
          content: |
            [Unit]
            Description="Automatic Shutdown"
            Documentation=https://gitlab.com/CGamesPlay/dotfiles
            Requires=network-online.target
            After=network-online.target

            [Service]
            ExecStart=/usr/local/bin/hbv-auto-shutdown daemon
            KillMode=process
            KillSignal=SIGTERM
            Restart=on-failure

            [Install]
            WantedBy=multi-user.target
      - systemd:
          daemon_reload: yes
          name: hbv-auto-shutdown
          enabled: true
          state: started
        register: auto_shutdown_unit
      - systemd:
          name: hbv-auto-shutdown
          state: restarted
        when: not auto_shutdown_unit.changed and auto_shutdown_bin.changed

      - name: configure restic user
        user:
          name: restic
          system: yes
          create_home: no
          shell: /usr/sbin/nologin
          group: backup

      - name: create restic config directory
        file:
          path: /etc/restic
          state: directory
          owner: restic
          group: backup
          mode: '0750'

      - copy:
          dest: /etc/restic/restic.conf
          mode: 0644
          force: no
          content: |
            RESTIC_REPOSITORY=
            RESTIC_PASSWORD=
            RESTIC_OPTIONS="-o s3.storage-class=STANDARD_IA"
            RESTIC_CACHE_DIR=/var/cache/restic
            AWS_ACCESS_KEY_ID=
            AWS_SECRET_ACCESS_KEY=

      - copy:
          dest: /etc/restic/exclude
          mode: 0644
          force: no
          content: |
            # https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files
            # --exclude-caches is also enabled: https://bford.info/cachedir/

      - copy:
          dest: /etc/systemd/system/restic-backup.timer
          content: |
            [Unit]
            Description="Restic Backup daily timer"
            Documentation=https://gitlab.com/CGamesPlay/dotfiles
            Requires=network-online.target
            After=network-online.target

            [Timer]
            OnCalendar=daily
            Persistent=true
            RandomizedDelaySec=60

            [Install]
            WantedBy=timers.target
        register: restic_backup_timer_unit

      - copy:
          dest: /etc/systemd/system/restic-backup.service
          content: |
            [Unit]
            Description="Restic Backup"
            Documentation=https://gitlab.com/CGamesPlay/dotfiles
            Requires=network-online.target
            After=network-online.target

            [Service]
            Type=oneshot
            User=restic
            IOSchedulingClass=idle
            WorkingDirectory=/etc/restic
            EnvironmentFile=/etc/restic/restic.conf
            AmbientCapabilities=CAP_DAC_READ_SEARCH
            CapabilityBoundingSet=CAP_DAC_READ_SEARCH
            ExecStart=restic backup --exclude-file exclude --exclude-caches /home/ubuntu
            CacheDirectory=restic
            CacheDirectoryMode=0750
        register: restic_backup_service_unit

      - systemd:
          daemon-reload: true
        when: restic_backup_timer_unit.changed or restic_backup_service_unit.changed

      - name: configure dotfiles
        become: yes
        become_user: ubuntu
        ignore_errors: true
        block:
          - git:
              repo: https://gitlab.com/CGamesPlay/dotfiles.git
              dest: /home/ubuntu/dotfiles
            register: result
          - shell:
              cmd: ./bootstrap.sh
              chdir: /home/ubuntu/dotfiles
            environment:
              HOME: /home/ubuntu
            when: result.changed
